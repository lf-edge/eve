// Copyright(c) 2023 Zededa, Inc.
// All rights reserved

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: config/patch_envelope.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EVE_OPAQUE_OBJECT_CATEGORY int32

const (
	EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN     EVE_OPAQUE_OBJECT_CATEGORY = 0
	EVE_OPAQUE_OBJECT_CATEGORY_BASE64     EVE_OPAQUE_OBJECT_CATEGORY = 1
	EVE_OPAQUE_OBJECT_CATEGORY_BINARYBLOB EVE_OPAQUE_OBJECT_CATEGORY = 2
	EVE_OPAQUE_OBJECT_CATEGORY_SECRET     EVE_OPAQUE_OBJECT_CATEGORY = 3
)

// Enum value maps for EVE_OPAQUE_OBJECT_CATEGORY.
var (
	EVE_OPAQUE_OBJECT_CATEGORY_name = map[int32]string{
		0: "UNKOWN",
		1: "BASE64",
		2: "BINARYBLOB",
		3: "SECRET",
	}
	EVE_OPAQUE_OBJECT_CATEGORY_value = map[string]int32{
		"UNKOWN":     0,
		"BASE64":     1,
		"BINARYBLOB": 2,
		"SECRET":     3,
	}
)

func (x EVE_OPAQUE_OBJECT_CATEGORY) Enum() *EVE_OPAQUE_OBJECT_CATEGORY {
	p := new(EVE_OPAQUE_OBJECT_CATEGORY)
	*p = x
	return p
}

func (x EVE_OPAQUE_OBJECT_CATEGORY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EVE_OPAQUE_OBJECT_CATEGORY) Descriptor() protoreflect.EnumDescriptor {
	return file_config_patch_envelope_proto_enumTypes[0].Descriptor()
}

func (EVE_OPAQUE_OBJECT_CATEGORY) Type() protoreflect.EnumType {
	return &file_config_patch_envelope_proto_enumTypes[0]
}

func (x EVE_OPAQUE_OBJECT_CATEGORY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EVE_OPAQUE_OBJECT_CATEGORY.Descriptor instead.
func (EVE_OPAQUE_OBJECT_CATEGORY) EnumDescriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{0}
}

type EVE_PATCH_ENVELOPE_ACTION int32

const (
	EVE_PATCH_ENVELOPE_ACTION_STORE    EVE_PATCH_ENVELOPE_ACTION = 0
	EVE_PATCH_ENVELOPE_ACTION_ACTIVATE EVE_PATCH_ENVELOPE_ACTION = 1
)

// Enum value maps for EVE_PATCH_ENVELOPE_ACTION.
var (
	EVE_PATCH_ENVELOPE_ACTION_name = map[int32]string{
		0: "STORE",
		1: "ACTIVATE",
	}
	EVE_PATCH_ENVELOPE_ACTION_value = map[string]int32{
		"STORE":    0,
		"ACTIVATE": 1,
	}
)

func (x EVE_PATCH_ENVELOPE_ACTION) Enum() *EVE_PATCH_ENVELOPE_ACTION {
	p := new(EVE_PATCH_ENVELOPE_ACTION)
	*p = x
	return p
}

func (x EVE_PATCH_ENVELOPE_ACTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EVE_PATCH_ENVELOPE_ACTION) Descriptor() protoreflect.EnumDescriptor {
	return file_config_patch_envelope_proto_enumTypes[1].Descriptor()
}

func (EVE_PATCH_ENVELOPE_ACTION) Type() protoreflect.EnumType {
	return &file_config_patch_envelope_proto_enumTypes[1]
}

func (x EVE_PATCH_ENVELOPE_ACTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EVE_PATCH_ENVELOPE_ACTION.Descriptor instead.
func (EVE_PATCH_ENVELOPE_ACTION) EnumDescriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{1}
}

type InlineOpaqueBase64Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base64 encoded data
	Base64Data string `protobuf:"bytes,1,opt,name=base64Data,proto3" json:"base64Data,omitempty"`
	// file name to be used for storing this data
	// same file name shall be advertised to application agent
	FileNameToUse string `protobuf:"bytes,2,opt,name=fileNameToUse,proto3" json:"fileNameToUse,omitempty"`
	// any arbitraty metadata encoded to base64 string
	Base64MetaData *string `protobuf:"bytes,3,opt,name=base64MetaData,proto3,oneof" json:"base64MetaData,omitempty"`
}

func (x *InlineOpaqueBase64Data) Reset() {
	*x = InlineOpaqueBase64Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InlineOpaqueBase64Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InlineOpaqueBase64Data) ProtoMessage() {}

func (x *InlineOpaqueBase64Data) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InlineOpaqueBase64Data.ProtoReflect.Descriptor instead.
func (*InlineOpaqueBase64Data) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *InlineOpaqueBase64Data) GetBase64Data() string {
	if x != nil {
		return x.Base64Data
	}
	return ""
}

func (x *InlineOpaqueBase64Data) GetFileNameToUse() string {
	if x != nil {
		return x.FileNameToUse
	}
	return ""
}

func (x *InlineOpaqueBase64Data) GetBase64MetaData() string {
	if x != nil && x.Base64MetaData != nil {
		return *x.Base64MetaData
	}
	return ""
}

type ExternalOpaqueBinaryBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the image uploaded into data store
	ImageName string `protobuf:"bytes,1,opt,name=imageName,proto3" json:"imageName,omitempty"`
	// file name to be used for storing this data in EVE
	// the same file name shall be advertised to application agent
	// if it's empty EVE will use image name
	FileNameToUse *string `protobuf:"bytes,2,opt,name=fileNameToUse,proto3,oneof" json:"fileNameToUse,omitempty"`
	// can be image type or size encoded into a single string
	BlobMetaData *string `protobuf:"bytes,3,opt,name=blobMetaData,proto3,oneof" json:"blobMetaData,omitempty"`
	// Target field of Volume set to AppCustom
	// refers to UUID of a volume
	ImageId string `protobuf:"bytes,4,opt,name=imageId,proto3" json:"imageId,omitempty"`
}

func (x *ExternalOpaqueBinaryBlob) Reset() {
	*x = ExternalOpaqueBinaryBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalOpaqueBinaryBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalOpaqueBinaryBlob) ProtoMessage() {}

func (x *ExternalOpaqueBinaryBlob) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalOpaqueBinaryBlob.ProtoReflect.Descriptor instead.
func (*ExternalOpaqueBinaryBlob) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{1}
}

func (x *ExternalOpaqueBinaryBlob) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ExternalOpaqueBinaryBlob) GetFileNameToUse() string {
	if x != nil && x.FileNameToUse != nil {
		return *x.FileNameToUse
	}
	return ""
}

func (x *ExternalOpaqueBinaryBlob) GetBlobMetaData() string {
	if x != nil && x.BlobMetaData != nil {
		return *x.BlobMetaData
	}
	return ""
}

func (x *ExternalOpaqueBinaryBlob) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type EveBinaryArtifact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// base64 or binary blob only - secret type is invalid
	Format EVE_OPAQUE_OBJECT_CATEGORY `protobuf:"varint,1,opt,name=format,proto3,enum=org.lfedge.eve.config.EVE_OPAQUE_OBJECT_CATEGORY" json:"format,omitempty"`
	// Types that are assignable to BinaryBlob:
	//
	//	*EveBinaryArtifact_Inline
	//	*EveBinaryArtifact_VolumeRef
	BinaryBlob       isEveBinaryArtifact_BinaryBlob `protobuf_oneof:"binaryBlob"`
	ArtifactMetaData *string                        `protobuf:"bytes,4,opt,name=artifactMetaData,proto3,oneof" json:"artifactMetaData,omitempty"`
}

func (x *EveBinaryArtifact) Reset() {
	*x = EveBinaryArtifact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EveBinaryArtifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EveBinaryArtifact) ProtoMessage() {}

func (x *EveBinaryArtifact) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EveBinaryArtifact.ProtoReflect.Descriptor instead.
func (*EveBinaryArtifact) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{2}
}

func (x *EveBinaryArtifact) GetFormat() EVE_OPAQUE_OBJECT_CATEGORY {
	if x != nil {
		return x.Format
	}
	return EVE_OPAQUE_OBJECT_CATEGORY_UNKOWN
}

func (m *EveBinaryArtifact) GetBinaryBlob() isEveBinaryArtifact_BinaryBlob {
	if m != nil {
		return m.BinaryBlob
	}
	return nil
}

func (x *EveBinaryArtifact) GetInline() *InlineOpaqueBase64Data {
	if x, ok := x.GetBinaryBlob().(*EveBinaryArtifact_Inline); ok {
		return x.Inline
	}
	return nil
}

func (x *EveBinaryArtifact) GetVolumeRef() *ExternalOpaqueBinaryBlob {
	if x, ok := x.GetBinaryBlob().(*EveBinaryArtifact_VolumeRef); ok {
		return x.VolumeRef
	}
	return nil
}

func (x *EveBinaryArtifact) GetArtifactMetaData() string {
	if x != nil && x.ArtifactMetaData != nil {
		return *x.ArtifactMetaData
	}
	return ""
}

type isEveBinaryArtifact_BinaryBlob interface {
	isEveBinaryArtifact_BinaryBlob()
}

type EveBinaryArtifact_Inline struct {
	Inline *InlineOpaqueBase64Data `protobuf:"bytes,2,opt,name=inline,proto3,oneof"`
}

type EveBinaryArtifact_VolumeRef struct {
	VolumeRef *ExternalOpaqueBinaryBlob `protobuf:"bytes,3,opt,name=volumeRef,proto3,oneof"`
}

func (*EveBinaryArtifact_Inline) isEveBinaryArtifact_BinaryBlob() {}

func (*EveBinaryArtifact_VolumeRef) isEveBinaryArtifact_BinaryBlob() {}

type EvePatchEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique name provided by user
	DisplayName string `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// Unique
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// arbitrary version from user
	Version *string `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	// way this object should be treated
	Action    EVE_PATCH_ENVELOPE_ACTION `protobuf:"varint,4,opt,name=action,proto3,enum=org.lfedge.eve.config.EVE_PATCH_ENVELOPE_ACTION" json:"action,omitempty"`
	Artifacts []*EveBinaryArtifact      `protobuf:"bytes,5,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// List of application instance ids that should
	// be allowed to access this patch envelope
	AppInstIdsAllowed []string `protobuf:"bytes,6,rep,name=appInstIdsAllowed,proto3" json:"appInstIdsAllowed,omitempty"`
	// Time object created in UTC format
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *EvePatchEnvelope) Reset() {
	*x = EvePatchEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_patch_envelope_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvePatchEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvePatchEnvelope) ProtoMessage() {}

func (x *EvePatchEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_config_patch_envelope_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvePatchEnvelope.ProtoReflect.Descriptor instead.
func (*EvePatchEnvelope) Descriptor() ([]byte, []int) {
	return file_config_patch_envelope_proto_rawDescGZIP(), []int{3}
}

func (x *EvePatchEnvelope) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *EvePatchEnvelope) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *EvePatchEnvelope) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *EvePatchEnvelope) GetAction() EVE_PATCH_ENVELOPE_ACTION {
	if x != nil {
		return x.Action
	}
	return EVE_PATCH_ENVELOPE_ACTION_STORE
}

func (x *EvePatchEnvelope) GetArtifacts() []*EveBinaryArtifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *EvePatchEnvelope) GetAppInstIdsAllowed() []string {
	if x != nil {
		return x.AppInstIdsAllowed
	}
	return nil
}

func (x *EvePatchEnvelope) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_config_patch_envelope_proto protoreflect.FileDescriptor

var file_config_patch_envelope_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x65,
	0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6f,
	0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x4d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42,
	0x6c, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x55,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x55, 0x73,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xcc, 0x02, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x49, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c,
	0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x45, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45,
	0x43, 0x54, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x47, 0x0a, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65,
	0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4f, 0x0a, 0x09,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x62,
	0x48, 0x00, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x66, 0x12, 0x2f, 0x0a,
	0x10, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x61, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x62, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xef, 0x02, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x50, 0x61, 0x74, 0x63, 0x68, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x4e,
	0x56, 0x45, 0x4c, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c,
	0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x45, 0x76, 0x65, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61,
	0x63, 0x74, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x2c, 0x0a,
	0x11, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x49, 0x64, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x2a, 0x50, 0x0a, 0x1a, 0x45, 0x56, 0x45, 0x5f, 0x4f, 0x50, 0x41, 0x51, 0x55,
	0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x41, 0x53, 0x45, 0x36, 0x34, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x49, 0x4e,
	0x41, 0x52, 0x59, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43,
	0x52, 0x45, 0x54, 0x10, 0x03, 0x2a, 0x34, 0x0a, 0x19, 0x45, 0x56, 0x45, 0x5f, 0x50, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x45, 0x4e, 0x56, 0x45, 0x4c, 0x4f, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x01, 0x42, 0x3d, 0x0a, 0x15, 0x6f,
	0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x66, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_patch_envelope_proto_rawDescOnce sync.Once
	file_config_patch_envelope_proto_rawDescData = file_config_patch_envelope_proto_rawDesc
)

func file_config_patch_envelope_proto_rawDescGZIP() []byte {
	file_config_patch_envelope_proto_rawDescOnce.Do(func() {
		file_config_patch_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_patch_envelope_proto_rawDescData)
	})
	return file_config_patch_envelope_proto_rawDescData
}

var file_config_patch_envelope_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_patch_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_patch_envelope_proto_goTypes = []interface{}{
	(EVE_OPAQUE_OBJECT_CATEGORY)(0),  // 0: org.lfedge.eve.config.EVE_OPAQUE_OBJECT_CATEGORY
	(EVE_PATCH_ENVELOPE_ACTION)(0),   // 1: org.lfedge.eve.config.EVE_PATCH_ENVELOPE_ACTION
	(*InlineOpaqueBase64Data)(nil),   // 2: org.lfedge.eve.config.InlineOpaqueBase64Data
	(*ExternalOpaqueBinaryBlob)(nil), // 3: org.lfedge.eve.config.ExternalOpaqueBinaryBlob
	(*EveBinaryArtifact)(nil),        // 4: org.lfedge.eve.config.EveBinaryArtifact
	(*EvePatchEnvelope)(nil),         // 5: org.lfedge.eve.config.EvePatchEnvelope
	(*timestamppb.Timestamp)(nil),    // 6: google.protobuf.Timestamp
}
var file_config_patch_envelope_proto_depIdxs = []int32{
	0, // 0: org.lfedge.eve.config.EveBinaryArtifact.format:type_name -> org.lfedge.eve.config.EVE_OPAQUE_OBJECT_CATEGORY
	2, // 1: org.lfedge.eve.config.EveBinaryArtifact.inline:type_name -> org.lfedge.eve.config.InlineOpaqueBase64Data
	3, // 2: org.lfedge.eve.config.EveBinaryArtifact.volumeRef:type_name -> org.lfedge.eve.config.ExternalOpaqueBinaryBlob
	1, // 3: org.lfedge.eve.config.EvePatchEnvelope.action:type_name -> org.lfedge.eve.config.EVE_PATCH_ENVELOPE_ACTION
	4, // 4: org.lfedge.eve.config.EvePatchEnvelope.artifacts:type_name -> org.lfedge.eve.config.EveBinaryArtifact
	6, // 5: org.lfedge.eve.config.EvePatchEnvelope.createTime:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_config_patch_envelope_proto_init() }
func file_config_patch_envelope_proto_init() {
	if File_config_patch_envelope_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_patch_envelope_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InlineOpaqueBase64Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalOpaqueBinaryBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EveBinaryArtifact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_patch_envelope_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvePatchEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_config_patch_envelope_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_config_patch_envelope_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_config_patch_envelope_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EveBinaryArtifact_Inline)(nil),
		(*EveBinaryArtifact_VolumeRef)(nil),
	}
	file_config_patch_envelope_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_patch_envelope_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_patch_envelope_proto_goTypes,
		DependencyIndexes: file_config_patch_envelope_proto_depIdxs,
		EnumInfos:         file_config_patch_envelope_proto_enumTypes,
		MessageInfos:      file_config_patch_envelope_proto_msgTypes,
	}.Build()
	File_config_patch_envelope_proto = out.File
	file_config_patch_envelope_proto_rawDesc = nil
	file_config_patch_envelope_proto_goTypes = nil
	file_config_patch_envelope_proto_depIdxs = nil
}
