// Copyright(c) 2024 Zededa, Inc.
// All rights reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: config/edge_node_cluster.proto

package config

import (
	evecommon "github.com/lf-edge/eve-api/go/evecommon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EdgeNodeCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster name, in case it has multiple cluster on the same site
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// cluster UUID
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Cluster-Interface, for example "mgmt0", this is the logicallabel of the physicalIO
	ClusterInterface string `protobuf:"bytes,3,opt,name=cluster_interface,json=clusterInterface,proto3" json:"cluster_interface,omitempty"`
	// the 'cluster-prefix' IP address of the 'Cluster-Interface', 10.244.244.2/28
	ClusterIpPrefix string `protobuf:"bytes,4,opt,name=cluster_ip_prefix,json=clusterIpPrefix,proto3" json:"cluster_ip_prefix,omitempty"`
	// This device is an 'Agent' node
	IsWorkerNode bool `protobuf:"varint,5,opt,name=is_worker_node,json=isWorkerNode,proto3" json:"is_worker_node,omitempty"`
	// Server IP address to join the cluster. E.g. 10.244.244.1
	JoinServerIp string `protobuf:"bytes,6,opt,name=join_server_ip,json=joinServerIp,proto3" json:"join_server_ip,omitempty"`
	// encrypted token string, use edge-node TPM to decrypt
	EncryptedClusterToken *evecommon.CipherBlock `protobuf:"bytes,7,opt,name=encrypted_cluster_token,json=encryptedClusterToken,proto3" json:"encrypted_cluster_token,omitempty"`
}

func (x *EdgeNodeCluster) Reset() {
	*x = EdgeNodeCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_edge_node_cluster_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeNodeCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeNodeCluster) ProtoMessage() {}

func (x *EdgeNodeCluster) ProtoReflect() protoreflect.Message {
	mi := &file_config_edge_node_cluster_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeNodeCluster.ProtoReflect.Descriptor instead.
func (*EdgeNodeCluster) Descriptor() ([]byte, []int) {
	return file_config_edge_node_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *EdgeNodeCluster) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *EdgeNodeCluster) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *EdgeNodeCluster) GetClusterInterface() string {
	if x != nil {
		return x.ClusterInterface
	}
	return ""
}

func (x *EdgeNodeCluster) GetClusterIpPrefix() string {
	if x != nil {
		return x.ClusterIpPrefix
	}
	return ""
}

func (x *EdgeNodeCluster) GetIsWorkerNode() bool {
	if x != nil {
		return x.IsWorkerNode
	}
	return false
}

func (x *EdgeNodeCluster) GetJoinServerIp() string {
	if x != nil {
		return x.JoinServerIp
	}
	return ""
}

func (x *EdgeNodeCluster) GetEncryptedClusterToken() *evecommon.CipherBlock {
	if x != nil {
		return x.EncryptedClusterToken
	}
	return nil
}

var File_config_edge_node_cluster_proto protoreflect.FileDescriptor

var file_config_edge_node_cluster_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x65, 0x76, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x02, 0x0a, 0x0f, 0x45, 0x64, 0x67, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x70, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12,
	0x5a, 0x0a, 0x17, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x15, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x3d, 0x0a, 0x15, 0x6f,
	0x72, 0x67, 0x2e, 0x6c, 0x66, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x65, 0x76, 0x65, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x66, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x65, 0x76, 0x65, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_edge_node_cluster_proto_rawDescOnce sync.Once
	file_config_edge_node_cluster_proto_rawDescData = file_config_edge_node_cluster_proto_rawDesc
)

func file_config_edge_node_cluster_proto_rawDescGZIP() []byte {
	file_config_edge_node_cluster_proto_rawDescOnce.Do(func() {
		file_config_edge_node_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_edge_node_cluster_proto_rawDescData)
	})
	return file_config_edge_node_cluster_proto_rawDescData
}

var file_config_edge_node_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_edge_node_cluster_proto_goTypes = []interface{}{
	(*EdgeNodeCluster)(nil),       // 0: org.lfedge.eve.config.EdgeNodeCluster
	(*evecommon.CipherBlock)(nil), // 1: org.lfedge.eve.common.CipherBlock
}
var file_config_edge_node_cluster_proto_depIdxs = []int32{
	1, // 0: org.lfedge.eve.config.EdgeNodeCluster.encrypted_cluster_token:type_name -> org.lfedge.eve.common.CipherBlock
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_config_edge_node_cluster_proto_init() }
func file_config_edge_node_cluster_proto_init() {
	if File_config_edge_node_cluster_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_edge_node_cluster_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeNodeCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_edge_node_cluster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_edge_node_cluster_proto_goTypes,
		DependencyIndexes: file_config_edge_node_cluster_proto_depIdxs,
		MessageInfos:      file_config_edge_node_cluster_proto_msgTypes,
	}.Build()
	File_config_edge_node_cluster_proto = out.File
	file_config_edge_node_cluster_proto_rawDesc = nil
	file_config_edge_node_cluster_proto_goTypes = nil
	file_config_edge_node_cluster_proto_depIdxs = nil
}
