function installer_submenus {
   menuentry 'force rootdelay for slow USB controllers' {
      set_global dom0_extra_args "$dom0_extra_args rootdelay=30"
   }

   menuentry 'do NOT install - collect black box instead' {
      set_global dom0_cmdline "$dom0_cmdline eve_blackbox"
   }

   menuentry 'pause before install' {
      set_global dom0_cmdline "$dom0_cmdline eve_pause_before_install"
   }

   menuentry 'pause after install' {
      set_global dom0_cmdline "$dom0_cmdline eve_pause_after_install"
   }

   menuentry 'skip installing rootfs' {
      set_global dom0_cmdline "$dom0_cmdline eve_install_skip_rootfs"
   }

   menuentry 'skip installing config' {
      set_global dom0_cmdline "$dom0_cmdline eve_install_skip_config"
   }

   menuentry 'skip installing persist' {
      set_global dom0_cmdline "$dom0_cmdline eve_install_skip_persist"
   }

   menuentry 'set the target installation disk' {
      set_global dom0_cmdline "$dom0_cmdline eve_install_disk=$eve_install_disk"
   }

   menuentry 'set the target persist disk' {
      set_global dom0_cmdline "$dom0_cmdline eve_persist_disk=$eve_persist_disk"
   }

   menuentry 'disable post-install verification' {
      set_global dom0_cmdline "$dom0_cmdline eve_disable_verify"
   }

   menuentry 'enable install debug' {
      set_global dom0_cmdline "$dom0_cmdline eve_install_debug=true linuxkit.runc_console=1"
   }

   menuentry 'interactive mode' {
      set_global dom0_extra_args "$dom0_extra_args interactive"
   }
}

# $cmddevice is set by grub to the value of the boot device $dev, based on pkg/mkimage-raw-efi/grub.cfg.in
install_part="$cmddevice"
cat -s boot_uid "($install_part)/boot/.uuid"
set_global rootfs_title_suffix "-installer"
set_global do_extra_submenus "installer_submenus"
set_global dom0_extra_args "getty"
set_global eve_flavor kvm

# to handle the case where the rootfs is on a CD/ISO with a label
probe --set rootlabel --label $root
if [ "$rootlabel" = "EVEISO" ]; then
   if [ "$isnetboot" = "true" ]; then
      set_global initrd "/boot/initrd.img newc:/installer.iso:($install_part)/installer.iso" # add a simple custom initrd that will find the CD based on the label on the next line
      set_global rootfs_root "/installer.iso"
   else
      set_global initrd "/boot/initrd.img" # add a simple custom initrd that will find the CD based on the label on the next line
      set_global rootfs_root "LABEL=$rootlabel"
   fi
fi
