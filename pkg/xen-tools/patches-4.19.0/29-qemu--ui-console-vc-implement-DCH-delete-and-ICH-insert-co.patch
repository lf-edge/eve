From 276ec776b18bb4b82e83ddfe68029ca0db845287 Mon Sep 17 00:00:00 2001
From: Roman Penyaev <r.peniaev@gmail.com>
Date: Sun, 23 Feb 2025 10:31:24 +0100
Subject: [PATCH 1/1] ui/console-vc: implement DCH (delete) and ICH (insert)
 commands
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This patch implements DCH (delete character) and ICH (insert
character) commands.

DCH - Delete Character:
   "As characters are deleted, the remaining characters between the
    cursor and right margin move to the left. Character attributes move
    with the characters. The terminal adds blank spaces with no visual
    character attributes at the right margin. DCH has no effect outside
    the scrolling margins" [1].

ICH - Insert Character:
   "The ICH sequence inserts Pn blank characters with the normal
    character attribute. The cursor remains at the beginning of the
    blank characters. Text between the cursor and right margin moves to
    the right. Characters scrolled past the right margin are lost. ICH
    has no effect outside the scrolling margins" [2].

Without these commands console is barely usable.

[1] https://vt100.net/docs/vt510-rm/DCH.html
[2] https://vt100.net/docs/vt510-rm/ICH.html

Signed-off-by: Roman Penyaev <r.peniaev@gmail.com>
Cc: "Marc-André Lureau" <marcandre.lureau@redhat.com>
Cc: qemu-devel@nongnu.org
Reviewed-by: Marc-André Lureau <marcandre.lureau@redhat.com>
Message-ID: <20250226075913.353676-6-r.peniaev@gmail.com>
---
 tools/qemu-xen/ui/console.c | 104 ++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 98 insertions(+), 6 deletions(-)

diff --git a/tools/qemu-xen/ui/console.c b/tools/qemu-xen/ui/console.c
index a8eb28b937a1..a7aa23be328b 100644
--- a/tools/qemu-xen/ui/console.c
+++ b/tools/qemu-xen/ui/console.c
@@ -946,6 +952,86 @@ static void set_cursor(QemuConsole *s, int x, int y)
     s->y = y;
 }
 
+/**
+ * vc_csi_P() - (DCH) deletes one or more characters from the cursor
+ * position to the right. As characters are deleted, the remaining
+ * characters between the cursor and right margin move to the
+ * left. Character attributes move with the characters.
+ */
+static void vc_csi_P(struct QemuConsole *s, unsigned int nr)
+{
+    TextCell *c1, *c2;
+    unsigned int x1, x2, y;
+    unsigned int end, len;
+
+    if (!nr) {
+        nr = 1;
+    }
+    if (nr > s->width - s->x) {
+        nr = s->width - s->x;
+        if (!nr) {
+            return;
+        }
+    }
+
+    x1 = s->x;
+    x2 = s->x + nr;
+    len = s->width - x2;
+    if (len) {
+        y = (s->y_base + s->y) % s->total_height;
+        c1 = &s->cells[y * s->width + x1];
+        c2 = &s->cells[y * s->width + x2];
+        memmove(c1, c2, len * sizeof(*c1));
+        for (end = x1 + len; x1 < end; x1++) {
+            update_xy(s, x1, s->y);
+        }
+    }
+    /* Clear the rest */
+    for (; x1 < s->width; x1++) {
+        console_clear_xy(s, x1, s->y);
+    }
+}
+
+/**
+ * vc_csi_at() - (ICH) inserts `nr` blank characters with the default
+ * character attribute. The cursor remains at the beginning of the
+ * blank characters. Text between the cursor and right margin moves to
+ * the right. Characters scrolled past the right margin are lost.
+ */
+static void vc_csi_at(struct QemuConsole *s, unsigned int nr)
+{
+    TextCell *c1, *c2;
+    unsigned int x1, x2, y;
+    unsigned int end, len;
+
+    if (!nr) {
+        nr = 1;
+    }
+    if (nr > s->width - s->x) {
+        nr = s->width - s->x;
+        if (!nr) {
+            return;
+        }
+    }
+
+    x1 = s->x + nr;
+    x2 = s->x;
+    len = s->width - x1;
+    if (len) {
+        y = (s->y_base + s->y) % s->total_height;
+        c1 = &s->cells[y * s->width + x1];
+        c2 = &s->cells[y * s->width + x2];
+        memmove(c1, c2, len * sizeof(*c1));
+        for (end = x1 + len; x1 < end; x1++) {
+            update_xy(s, x1, s->y);
+        }
+    }
+    /* Insert blanks */
+    for (x1 = s->x; x1 < s->x + nr; x1++) {
+        console_clear_xy(s, x1, s->y);
+    }
+}
+
 static void console_putchar(QemuConsole *s, int ch)
 {
     int i;
@@ -1116,6 +1202,9 @@ static void console_putchar(QemuConsole *s, int ch)
                     break;
                 }
                 break;
+            case 'P':
+                vc_csi_P(s, s->esc_params[0]);
+                break;
             case 'm':
                 console_handle_escape(s);
                 break;
@@ -1143,6 +1232,9 @@ static void console_putchar(QemuConsole *s, int ch)
                 s->x = s->x_saved;
                 s->y = s->y_saved;
                 break;
+            case '@':
+                vc_csi_at(s, s->esc_params[0]);
+                break;
             default:
                 trace_console_putchar_unhandled(ch);
                 break;
-- 
2.43.0

