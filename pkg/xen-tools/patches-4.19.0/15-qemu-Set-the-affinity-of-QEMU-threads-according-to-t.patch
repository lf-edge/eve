From f6861fa011836c9101977e2b0ad1aadaf8d45a57 Mon Sep 17 00:00:00 2001
From: Nikolay Martyanov <ohmspectator@gmail.com>
Date: Wed, 28 Sep 2022 16:01:48 +0200
Subject: [PATCH 15/15] qemu: Set the affinity of QEMU threads according to the
 CPU mask options.

Signed-off-by: Nikolay Martyanov <ohmspectator@gmail.com>
---
 tools/qemu-xen/include/qemu/thread.h    |  2 ++
 tools/qemu-xen/softmmu/cpus.c           |  6 ++++
 tools/qemu-xen/util/qemu-thread-posix.c | 37 +++++++++++++++++++++++++
 3 files changed, 45 insertions(+)

diff --git a/tools/qemu-xen/include/qemu/thread.h b/tools/qemu-xen/include/qemu/thread.h
index 4baf4d1..3d1a76e 100644
--- a/tools/qemu-xen/include/qemu/thread.h
+++ b/tools/qemu-xen/include/qemu/thread.h
@@ -174,6 +174,8 @@ void qemu_event_destroy(QemuEvent *ev);
 void qemu_thread_create(QemuThread *thread, const char *name,
                         void *(*start_routine)(void *),
                         void *arg, int mode);
+/* TODO implemented for POSIX only by now */
+void qemu_thread_set_affinity(QemuThread *thread, unsigned int cpumask);
 void *qemu_thread_join(QemuThread *thread);
 void qemu_thread_get_self(QemuThread *thread);
 bool qemu_thread_is_self(QemuThread *thread);
diff --git a/tools/qemu-xen/softmmu/cpus.c b/tools/qemu-xen/softmmu/cpus.c
index da56052..000df00 100644
--- a/tools/qemu-xen/softmmu/cpus.c
+++ b/tools/qemu-xen/softmmu/cpus.c
@@ -2073,6 +2073,12 @@ void qemu_init_vcpu(CPUState *cpu)
         qemu_dummy_start_vcpu(cpu);
     }
 
+    if(cpu_can_run(cpu))
+        warn_report("Change a CPU affinity after the CPU may have been running for a while\n");
+
+    if (cpu->cpumask)
+        qemu_thread_set_affinity(cpu->thread, cpu->cpumask);
+
     while (!cpu->created) {
         qemu_cond_wait(&qemu_cpu_cond, &qemu_global_mutex);
     }
diff --git a/tools/qemu-xen/util/qemu-thread-posix.c b/tools/qemu-xen/util/qemu-thread-posix.c
index b4c2359..c404ff4 100644
--- a/tools/qemu-xen/util/qemu-thread-posix.c
+++ b/tools/qemu-xen/util/qemu-thread-posix.c
@@ -17,6 +17,8 @@
 #include "qemu-thread-common.h"
 #include "qemu/tsan.h"
 
+#include "hw/core/cpu.h"
+
 static bool name_threads;
 
 void qemu_thread_naming(bool enable)
@@ -523,6 +525,41 @@ static void *qemu_thread_start(void *args)
     return r;
 }
 
+static inline unsigned get_max_cpu_in_mask(unsigned int cpumask)
+{
+    assert(cpumask != 0);
+    return (sizeof (cpumask) * BITS_PER_BYTE) - __builtin_clz (cpumask) - 1;
+}
+
+void qemu_thread_set_affinity(QemuThread *thread, unsigned int cpumask)
+{
+    int err;
+    size_t cpu_set_size;
+    cpu_set_t cpu_set;
+    unsigned int max_pcpu;
+    unsigned int cpumask_tmp = cpumask;
+
+    CPU_ZERO(&cpu_set);
+
+    /* set the CPU_SET according to mask */
+    int cur_pcpu = 0;
+    while(cpumask_tmp) {
+        if (cpumask_tmp & 1)
+            CPU_SET (cur_pcpu, &cpu_set);
+        cpumask_tmp >>= 1;
+        cur_pcpu += 1;
+    }
+
+    /* Count the size of the necessary CPU_SET */
+    max_pcpu = get_max_cpu_in_mask(cpumask);
+    cpu_set_size = DIV_ROUND_UP(max_pcpu + 1, BITS_PER_BYTE);
+
+    err = pthread_setaffinity_np(thread->thread, cpu_set_size, &cpu_set);
+
+    if (err)
+        error_exit (err, __func__);
+}
+
 void qemu_thread_create(QemuThread *thread, const char *name,
                        void *(*start_routine)(void*),
                        void *arg, int mode)
-- 
2.35.1

