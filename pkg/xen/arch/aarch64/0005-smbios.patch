diff --git a/arch/arm/domain_build.c b/arch/arm/domain_build.c
index 669970c..d15aade 100644
--- a/arch/arm/domain_build.c
+++ b/arch/arm/domain_build.c
@@ -113,6 +113,14 @@ unsigned int __init dom0_max_vcpus(void)
     return opt_dom0_max_vcpus;
 }
 
+
+static unsigned long __initdata smbios_addr;
+void __init dmi_efi_get_table(const void *smbios, const void *smbios3)
+{
+	 smbios_addr = (unsigned long)smbios;
+}
+
+
 struct vcpu *__init alloc_dom0_vcpu0(struct domain *dom0)
 {
     return vcpu_create(dom0, 0);
@@ -1199,6 +1207,14 @@ int __init make_hypervisor_node(struct domain *d,
     if ( res )
         return res;
 
+     if ( smbios_addr != 0 )
+     {
+	     res = fdt_property_u64(fdt, "xen,smbios", smbios_addr);
+	      if ( res )
+		       return res;
+     }
+
+
     /* Cannot use fdt_property_string due to embedded nulls */
     res = fdt_property(fdt, "compatible", compat, sizeof(compat));
     if ( res )
@@ -2183,6 +2199,14 @@ static int __init construct_dom0(struct domain *d)
     if ( rc < 0 )
         return rc;
 
+    if ( smbios_addr != 0 )
+    {
+	  map_regions_p2mt(d,
+			   gaddr_to_gfn(smbios_addr), 1,
+			     maddr_to_mfn(smbios_addr), p2m_mmio_direct_c);
+    }
+
+
     return construct_domain(d, &kinfo);
 }

diff --git a/common/efi/boot.c b/common/efi/boot.c
index efbec00..bfc07bb 100644
--- a/common/efi/boot.c
+++ b/common/efi/boot.c
@@ -999,12 +999,10 @@ static void __init efi_tables(void)
             esrt = (UINTN)efi_ct[i].VendorTable;
     }
 
-#ifndef CONFIG_ARM /* TODO - disabled until implemented on ARM */
     dmi_efi_get_table(efi.smbios != EFI_INVALID_TABLE_ADDR
                       ? (void *)(long)efi.smbios : NULL,
                       efi.smbios3 != EFI_INVALID_TABLE_ADDR
                       ? (void *)(long)efi.smbios3 : NULL);
-#endif
 }
 
 static void __init setup_efi_pci(void)
