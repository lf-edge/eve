#!/bin/bash
# Automated Test Runner Generated by Terraform
set -e

# Configuration
TOTAL_RAM_GB=${total_ram_gb}
CURRENT_USAGE_MB=${current_usage_mb}
DURATION_MINUTES=${duration_minutes}

# Find eden binary
if [ -x "../../eden" ]; then
    EDEN_CMD="../../eden"
elif [ -x "../eden" ]; then
    EDEN_CMD="../eden"
else
    EDEN_CMD="./eden"
fi

RESULTS_DIR="../results/automated-test-$(date +%Y%m%d_%H%M%S)"
mkdir -p "$RESULTS_DIR"

echo "=== Automated EVE Memory Test Suite ==="
echo "Configuration: ${TOTAL_RAM_GB}GB total, ${CURRENT_USAGE_MB}MB current usage"
echo "Results: $RESULTS_DIR"
echo ""

# Initialize results
echo "TestName,MemoryMB,Status,DeployTime,Timestamp" > "$RESULTS_DIR/results.csv"

run_test() {
    local name=$1
    local memory_mb=$2
    local description=$3
    
    echo "=== $description ($memory_mb MB) ==="
    
    local container_name="auto-test-$name"
    $EDEN_CMD pod delete "$container_name" 2>/dev/null || true
    sleep 3
    
    local start_time=$(date +%s)
    
    if $EDEN_CMD pod deploy docker://ubuntu:20.04 --memory="${memory_mb}MB" --name="$container_name"; then
        local wait_count=0
        while [ $wait_count -lt 120 ]; do
            local status=$($EDEN_CMD pod ps | grep "$container_name" | awk '{print $NF}' 2>/dev/null || echo "NOT_FOUND")
            
            if echo "$status" | grep -q "RUNNING"; then
                local end_time=$(date +%s)
                local deploy_time=$((end_time - start_time))
                echo "✅ SUCCESS: $name ($deploy_time seconds)"
                echo "$name,$memory_mb,SUCCESS,$deploy_time,$(date)" >> "$RESULTS_DIR/results.csv"
                $EDEN_CMD pod delete "$container_name" >/dev/null 2>&1 || true
                return 0
            elif echo "$status" | grep -q "ERROR\|HALTING"; then
                echo "❌ FAILED: $name"
                echo "$name,$memory_mb,FAILED,0,$(date)" >> "$RESULTS_DIR/results.csv"
                $EDEN_CMD pod delete "$container_name" >/dev/null 2>&1 || true
                return 1
            fi
            
            sleep 1
            ((wait_count++))
        done
        
        echo "⏰ TIMEOUT: $name"
        echo "$name,$memory_mb,TIMEOUT,120,$(date)" >> "$RESULTS_DIR/results.csv"
        $EDEN_CMD pod delete "$container_name" >/dev/null 2>&1 || true
        return 1
    else
        echo "❌ DEPLOY_FAILED: $name"
        echo "$name,$memory_mb,DEPLOY_FAILED,0,$(date)" >> "$RESULTS_DIR/results.csv"
        return 1
    fi
}

# Run all test scenarios
%{ for scenario in test_scenarios ~}
run_test "${scenario.name}" ${scenario.ram_mb} "${scenario.description}"
sleep 5
%{ endfor ~}

# Generate summary
echo ""
echo "=== Test Results Summary ==="
cat "$RESULTS_DIR/results.csv"

{
    echo "# Automated Test Results"
    echo "Generated: $(date)"
    echo ""
    echo "## Configuration"
    echo "- Total RAM: ${TOTAL_RAM_GB}GB"
    echo "- Current Usage: ${CURRENT_USAGE_MB}MB"
    echo "- Test Duration: ${DURATION_MINUTES} minutes"
    echo ""
    echo "## Results"
    echo '```'
    cat "$RESULTS_DIR/results.csv"
    echo '```'
} > "$RESULTS_DIR/SUMMARY.md"

echo ""
echo "Report generated: $RESULTS_DIR/SUMMARY.md"
